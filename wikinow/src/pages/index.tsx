import { type NextPage } from "next";
import Head from "next/head";
import { Transition } from '@headlessui/react'
import { Bars3Icon, XMarkIcon } from "@heroicons/react/24/outline"
import { useState } from "react";
import { GuideCard } from "../components/guide-card";
import { api } from "../utils/api";
import { NewGuide } from "../components/new-guide";
import { PrimaryIconButton } from "../components/buttons";
import { Toaster } from "react-hot-toast";

const Home: NextPage = () => {
  const [isShowing, setIsShowing] = useState(false);
  const guides = api.guides.getTopGuides.useQuery();

  return (
    <>
      <Head>
        <title>wikiNow</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Toaster />
      <Transition
        show={isShowing}
        as="div"
        className="fixed inset-0 z-10 bg-black bg-opacity-50"
        enter="transition-opacity duration-75"
        enterFrom="opacity-0"
        enterTo="opacity-100"
        leave="transition-opacity duration-150"
        leaveFrom="opacity-100"
        leaveTo="opacity-0"
      >
        <Transition.Child
          enter="transition position ease-in-out duration-500 sm:duration-700"
          enterFrom="opacity-0 translate-x-[-50rem]"
          enterTo="opacity-100 translate-x-0"
          leave="transition ease-in-out duration-500 sm:duration-700"
          leaveFrom="opacity-100 translate-x-0"
          leaveTo="opacity-0 translate-x-[-50rem]"
        >
          <div className="flex flex-row items-start">
            <div className="w-screen sm:w-[50rem] h-screen overflow-y-auto sm:rounded-tr-xl sm:rounded-br-xl bg-gin_fizz-400">
              <div className="flex flex-row justify-between items-baseline">
                <h1 className="pl-5 pt-10 text-3xl font-bold">Top Guides</h1>
                <div className="block sm:hidden">
                  <PrimaryIconButton onClick={() => setIsShowing(!isShowing)} child={<XMarkIcon className="w-8 h-8 text-white" />} />
                </div>
              </div>
              <div className="p-5 flex flex-col gap-3 items-start justify-start">
                {(guides.data === undefined || guides.data?.length === undefined || guides.data?.length === 0) && <p className="text-xl text-gin_fizz-800">No guides found...</p>}
                {guides.data?.map((guide) => {

                  // Create an array of all of the non-null images in the guide
                  const images = guide.steps.map((step) => step.image).reduce((images, step) => {
                    if (step) images.push(step)
                    return images;
                  }, [] as string[]);

                  return (
                    <GuideCard
                      key={guide.id}
                      id={guide.id}
                      title={guide.title}
                      images={images}
                      steps={guide.steps.length}
                      views={guide.views}
                      createdAt={new Date(guide.createdAt)} />
                  );
                })}
              </div>
            </div>
            <div className="hidden sm:block">
              <PrimaryIconButton onClick={() => setIsShowing(!isShowing)} child={<XMarkIcon className="w-8 h-8 text-white" />} />
            </div>
          </div>
        </Transition.Child>
      </Transition>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gin_fizz-400">
        <div className="absolute top-[0.5rem] left-[0.5rem]">
          <button onClick={() => setIsShowing(!isShowing)} className="bg-port_gore-500 rounded-lg border-4 border-port_gore-500 p-[0.25rem] hover:bg-port_gore-400 transition-colors duration-200">
            <Bars3Icon className="w-8 h-8 text-white" />
          </button>
        </div>
        <h1 className="text-5xl font-extrabold tracking-tight text-port_gore-400 sm:text-[5rem]">
          wiki<span className="text-port_gore-600">Now</span>
        </h1>
        <NewGuide />
      </main>
    </>
  );
};

export default Home;
